{
	"info": {
		"_postman_id": "42d65e67-6b62-4e23-a62b-ddf692732ac3",
		"name": "Server Rest API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42993420"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Realizar login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json();\r",
									"pm.globals.set(\"token\", resposta.authorization);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "        {\r\n            \"email\": \"lucasQA_teste@gmail.com\",\r\n            \"password\": \"teste@123\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Listar Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Logitech MX Vertical\");\r",
									"});\r",
									"/*\r",
									"É possível validar qualquer coisa no body. nome, preco, descricao...\r",
									" */\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/produtos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Produtos por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Placa de vídeo Nvidea 5090\");\r",
									"});\r",
									"/*\r",
									"É possível validar qualquer coisa no body. nome, preco, descricao...\r",
									" */\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/produtos/NTnpMjLrMDilHXF3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"produtos",
								"NTnpMjLrMDilHXF3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Conjunto teclado e mouse gamer XA100\",\r\n  \"preco\": 327.00,\r\n  \"descricao\": \"periféricos\",\r\n  \"quantidade\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/produtos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Placa de vídeo GALAX 5090 V3 \",\r\n  \"preco\": 5500.00,\r\n  \"descricao\": \"eletrônicos\",\r\n  \"quantidade\": 32\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}produtos/NTnpMjLrMDilHXF3",
							"host": [
								"{{local}}produtos"
							],
							"path": [
								"NTnpMjLrMDilHXF3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Excluir produto da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local}}produtos/ArVuTgkQ1xtWGKKf",
							"host": [
								"{{local}}produtos"
							],
							"path": [
								"ArVuTgkQ1xtWGKKf"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Listar Usuários",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuarios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar Usuários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de email usado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Code 201 para usuário cadastrado com sucesso\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Code 400 quando email já\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar email da lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "        {\r\n            \"nome\": \"Lucas Nascimento\",\r\n            \"email\": \"lucasQA_teste@gmail.com\",\r\n            \"password\": \"teste@123\",\r\n            \"administrador\": \"true\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar usuário encontrado por _id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Code 200 para usuário encontrado\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Code 400 Usuário não encontrado\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensagem de usuário não encontrado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios/qdrIbAjMwwCQaXNG",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"qdrIbAjMwwCQaXNG"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir Usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de excluir registro com sucesos\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de nenhum registro excluído\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
									"});\r",
									"\r",
									"pm.test(\"Code 200 para sucesso em excluir ou não encontrar registro\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Code 400 Usuário com carrinho cadastrado\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensagem negando excluir\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Não é permitido excluir usuário com carrinho cadastrado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios/qdrIbAjMwwCQaXNG",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"qdrIbAjMwwCQaXNG"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar Usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de registro alterado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Code 200 para alteração com sucesso\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de cadastro\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Code 201 para cadastro com sucesso\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"E-mail já cadastradoo\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensagem de email já sendo usado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "        {\r\n            \"nome\": \"Túlio Que Aula no pix dif\",\r\n            \"email\": \"queaulapixdiff@teste.com\",\r\n            \"password\": \"teste@1235\",\r\n            \"administrador\": \"false\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios/qdrIbAjMwwCQaXNG",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"qdrIbAjMwwCQaXNG"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Carrinhos",
			"item": [
				{
					"name": "Listar Carrinhos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200 para listar carrinhos\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/carrinhos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar carrinhos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201 para cadastro realizado com sucesso\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Algo deu errado\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Token ausente\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Algo deu errado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Não é permitido possuir produto duplicado | Não é permitido ter mais de 1 carrinho | Produto não encontrado | Produto não possui quantidade suficiente\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"9t7eyhwZ4jEpVIYJ\",\r\n      \"quantidade\": 2\r\n    },\r\n    {\r\n      \"idProduto\": \"NTnpMjLrMDilHXF3\",\r\n      \"quantidade\": 3\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/carrinhos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Concluir compra | excluir carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200 Registro excluído com sucesso | Não foi encontrado carrinho para esse usuário\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validando mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Token ausente, inválido ou expirado\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/carrinhos/concluir-compra/aaaa",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"carrinhos",
								"concluir-compra",
								"aaaa"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}